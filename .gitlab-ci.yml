stages:
  - prepare
  - scan

clear_security_issues:
  stage: prepare
  image: python:3.12
  before_script:
    - pip install httpx
  script:
    - python scripts/clear_gitlab_security_issues.py

hounddog:
  stage: scan
  allow_failure: true
  image:
    name: hounddogai/$HOUNDDOG_DOCKER_IMAGE_NAME:$HOUNDDOG_DOCKER_IMAGE_TAG
    pull_policy: always
  script:
    - hounddog definitions
    - hounddog definitions --output-format=json
    - hounddog scan
    - hounddog scan --output-format=gitlab > hounddog.json
    - cat hounddog.json
  artifacts:
    reports:
      sast: hounddog.json

semgrep:
  image: semgrep/semgrep
  script: semgrep ci
  rules:
  - if: $CI_PIPELINE_SOURCE == "web"  # allow triggering a scan manually from the gitlab UI
  - if: $CI_MERGE_REQUEST_IID  # scan on merge request events
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # scan on push events to default branch
  variables:
    SEMGREP_APP_TOKEN: $SEMGREP_APP_TOKEN
    GITLAB_TOKEN: $GITLAB_TOKEN
